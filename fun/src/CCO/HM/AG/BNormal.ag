module{CCO.HM.AG.BNormal}{}{}
imports
{
import CCO.HM.AG.BaseHelpers (Var)
}

------------------------------------------------------------------------
-- AST
------------------------------------------------------------------------

data BVal
  | BNat     i :: {Int}
  | BVar     x :: {Var}
  | BField   x :: {Var}  i :: {Int}

type BVals = [BVal]

data BExp
  | BVal     v :: BVal
  | BApp     x1 :: {Var}  x2 :: {Var}
  | BLam     x :: {Var}  b :: BBind
  | BPrim    op :: {String} vs :: BVals
  | BAlloc   tag :: {Int} vs :: BVals
  | BWrap    b :: BBind
  | BForce   e :: BExp
  | BTail    e :: BExp

type Binding = (Var, BExp)
type Bindings = [Binding]

data BBind
  | BBind    es :: Bindings  t :: BTm

data BTm
  | BExp     e :: BExp
  | BIf      x :: {Var}  b1 :: BBind  b2 :: BBind

data BRoot
  | BRoot    b :: BBind
